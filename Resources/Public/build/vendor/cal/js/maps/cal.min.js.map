{"version":3,"sources":["cal.js"],"names":["$","now","moment","hours","minutes","seconds","milliseconds","e","resizeTimeout","cssSheet","hasTouch","window","isIOS","test","navigator","userAgent","MSStream","resize","setTimeout","trigger","cssAddRule","selector","rules","index","$style","type","text","append","get","sheet","insertRule","addRule","cssClasses","setColorCss","hexColor","hexColor2","color2","color","substr","toLowerCase","lightenDarkenColor","percent","R","parseInt","substring","G","B","toString","length","methods","init","options","extend","fn","onmCal","defaults","this","each","initIndex","self","$target","data","popupMode","$popupOpener","$popupPositionTo","displayMonths","dateRangeMin","dateRangeMax","dateRange","targetIsInput","$targetInput","targetDate","targetInit","rangeToMode","$rangeTo","rangeToIsInput","$rangeToInput","rangeToDate","rangeToInit","$container","$prevButton","$nextButton","monthSpan","yearSpan","monthContainer","nowLocal","locale","lang","localData","localeData","position","jquery","Math","min","max","nodeName","toUpperCase","rangeToElement","dateIndex","width","on","preventDefault","blur","css","value","parseAsMoment","navigationPrev","click","prevMonth","navigationNext","nextMonth","dateRanges","start","end","abs","diff","minRange","push","isActive","clone","targetInput","name","attr","after","placeholder","longDateFormat","dateFormat","val","isValid","selectDate","change","momentChange","add","doUpdateMonth","month","updateMonth","rangeToInput","popupShow","resetValue","create","popupHideLeave","evt","target","closest","relatedTarget","popupHide","$inner","find","removeClass","addClass","top","left","docOffsets","offset","offsets","indexOf","outerHeight","outerWidth","i","$dom","class","hasAttribute","clickAction","hideNavigation","$monthElement","$yearElement","weekday","day","format","$contentElement","$cElement","hasClass","mode","popupRangeSelect","keepPopupOpen","date","range","isBefore","isAfter","result","isBetween","isSame","inDateRange","date1","date2","getDateRange","createDates","$date","dates","html","prop","subtract","highlightDate","momentDate","formatL","formatLL","replace","getDateElement","startDate","year","dayOfYear","update","updateOptions","remove","is","hide","off","opener","rangeTo","positionTo","isReadonly","focus","show","maxRange","tempDate","changeTrigger","setDate","isDate","isMoment","setDateElementColors","bgColor","fontColor","nightMode","classNames","$dateElement","match","join","getDateIndex","dateElement","$element","method","apply","Array","prototype","slice","call","arguments","jQuery"],"mappings":"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","file":"../cal.min.js","sourcesContent":["/**\n * Copyright (c) 2019 Open New Media GmbH\n * onm_cal - Javascript Calendar\n * @version v1.1.1\n * @author Open New Media GmbH\n */\n;(function($) {\r\n    try {\r\n        var now = moment().hours(0).minutes(0).seconds(0).milliseconds(0);\r\n    } catch(e){\r\n        throw 'Can not find moment.js';\r\n    }\r\n\r\n    var hasTouch = 'ontouchstart' in window;\r\n    var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\n    var resizeTimeout;\r\n    $(window).resize(function() {\r\n        if (!resizeTimeout) {\r\n            resizeTimeout = window.setTimeout(function() {\r\n                resizeTimeout = null;\r\n                $(window).trigger('onm.cal.resize');\r\n            }, 133);\r\n        }\r\n    });\r\n\r\n    var cssSheet;\r\n    var cssAddRule = function(selector, rules, index) {\r\n        if (!cssSheet) {\r\n            var $style = $('<style/>', { type: 'text/css' }).text(\"\");\r\n            $('head').append($style);\r\n            cssSheet = $style.get(0).sheet;\r\n        }\r\n        if ('insertRule' in cssSheet) {\r\n            cssSheet.insertRule(selector + '{' + rules + '}', index);\r\n\r\n        } else if('addRule' in cssSheet) {\r\n            cssSheet.addRule(selector, rules, index);\r\n        }\r\n    };\r\n    var cssClasses = {};\r\n    var setColorCss = function(type, hexColor, hexColor2) {\r\n        var color = hexColor.substr(1).toLowerCase();\r\n        var color2;\r\n        if (hexColor2) {\r\n            color2 = hexColor2.substr(1).toLowerCase();\r\n        }\r\n        var index = type + '-' + color + (color2 ? '-' + color2 : '');\r\n        if (cssClasses[index]) {\r\n            return 'onm-cal-day-' + index;\r\n        }\r\n        cssClasses[index] = true;\r\n        cssAddRule('.onm-cal .onm-cal-content > div.onm-cal-day-' + index,\r\n            (type === 'bg' ? 'background-' : '') + 'color: #' + (color2 ? color2 : color) + ';'\r\n              + (color2 ? 'background: linear-gradient(to right,#' + color + ' 0%,#' + color + ' 50%,#' + color2 + ' 50%,#' + color2 + ' 100%);' : '')\r\n        );\r\n        if (type === 'bg') {\r\n            color = lightenDarkenColor(\"#\" + color, -30);\r\n\r\n            if (color2) {\r\n                color2 = lightenDarkenColor(\"#\" + color2, -30);\r\n            }\r\n        } else {\r\n            color = 'ffffff';\r\n        }\r\n            \r\n        cssAddRule('.onm-cal .onm-cal-content > div.onm-cal-day-' + index + '.onm-cal-day-selected',\r\n            (type === 'bg' ? 'background-' : '') + 'color: #' + (color2 ? color2 : color) + ';'\r\n              + (color2 ? 'background: linear-gradient(to right,#' + color + ' 0%,#' + color + ' 50%,#' + color2 + ' 50%,#' + color2 + ' 100%);' : '')\r\n        );\r\n        return 'onm-cal-day-' + index;\r\n    };\r\n    // Source: https://jsfiddle.net/gabrieleromanato/hrJ4X/\r\n    // var lightenDarkenColor = function (col, amt) {\r\n    //     var usePound = false;\r\n\r\n    //     if (col[0] == \"#\") {\r\n    //         col = col.slice(1);\r\n    //         usePound = true;\r\n    //     }\r\n    //     var num = parseInt(col, 16);\r\n    //     var r = (num >> 16) + amt;\r\n    //     if (r > 255) {\r\n    //         r = 255;\r\n    //     } else if (r < 0) {\r\n    //         r = 0;\r\n    //     }\r\n    //     var b = ((num >> 8) & 0x00FF) + amt;\r\n    //     if (b > 255) {\r\n    //         b = 255;\r\n    //     } else if (b < 0) {\r\n    //         b = 0;\r\n    //     }\r\n    //     var g = (num & 0x0000FF) + amt;\r\n    //     if (g > 255) {\r\n    //         g = 255;\r\n    //     } else if (g < 0) {\r\n    //         g = 0;\r\n    //     }\r\n    //     return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n    // };\r\n\r\n    // Source: https://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors/13542669#13542669 \r\n    var lightenDarkenColor = function (color, percent) {\r\n\r\n        var R = parseInt(color.substring(1,3),16);\r\n        var G = parseInt(color.substring(3,5),16);\r\n        var B = parseInt(color.substring(5,7),16);\r\n    \r\n        R = parseInt(R * (100 + percent) / 100);\r\n        G = parseInt(G * (100 + percent) / 100);\r\n        B = parseInt(B * (100 + percent) / 100);\r\n    \r\n        R = (R<255)?R:255;  \r\n        G = (G<255)?G:255;  \r\n        B = (B<255)?B:255;  \r\n    \r\n        var RR = ((R.toString(16).length==1)?\"0\"+R.toString(16):R.toString(16));\r\n        var GG = ((G.toString(16).length==1)?\"0\"+G.toString(16):G.toString(16));\r\n        var BB = ((B.toString(16).length==1)?\"0\"+B.toString(16):B.toString(16));\r\n    \r\n        return RR+GG+BB;\r\n    }\r\n    \r\n    var methods = {\r\n        init: function(options) {\r\n            var options = $.extend({}, $.fn.onmCal.defaults, options);\r\n            \r\n            return this.each(function(initIndex) {\r\n                var self = this;\r\n                var $target = $(self);\r\n                \r\n                if ($target.data('isOnmCal')) {\r\n                    return;\r\n                }\r\n                $target.data('isOnmCal', true);\r\n                \r\n                var nowLocal = moment(now.locale(options.lang));\r\n                var localData = nowLocal.localeData();\r\n                var popupMode;\r\n                var $popupOpener;\r\n                var $popupPositionTo;\r\n                var displayMonths;\r\n                var dateRangeMin;\r\n                var dateRangeMax;\r\n                var dateRange;\r\n                \r\n                var targetIsInput;\r\n                var $targetInput;\r\n                var targetDate;\r\n                var targetInit;\r\n                \r\n                var rangeToMode;\r\n                var $rangeTo;\r\n                var rangeToIsInput;\r\n                var $rangeToInput;\r\n                var rangeToDate;\r\n                var rangeToInit;\r\n                \r\n                var $container;\r\n                \r\n                var $prevButton;\r\n                var $nextButton;\r\n                var monthSpan;\r\n                var yearSpan;\r\n                var monthContainer;\r\n                \r\n                var init = function() {\r\n                    popupMode = (typeof options.position !== 'object' || !options.position.jquery || !options.position.get(initIndex));\r\n                    displayMonths = popupMode ? 1 : Math.min(12, Math.max(1, parseInt(options.displayMonths)));\r\n                    dateRange = [];\r\n                    targetIsInput = $target.get(0).nodeName.toUpperCase() === 'INPUT';\r\n                    targetInit = false;\r\n                    rangeToMode = typeof options.rangeToElement === 'object' && options.rangeToElement.jquery && options.rangeToElement.get(initIndex);\r\n                    $rangeTo = $(rangeToMode ? options.rangeToElement.get(initIndex) : []);\r\n                    rangeToIsInput = rangeToMode ? $rangeTo.get(0).nodeName.toUpperCase() === 'INPUT' : false;\r\n                    rangeToInit = false;\r\n                    monthSpan = [];\r\n                    yearSpan = [];\r\n                    monthContainer = [];\r\n                    \r\n                    self.dateIndex = {};\r\n                \r\n                    if (popupMode && !options.width) {\r\n                        options.width = '400px';\r\n                    }\r\n    \r\n                    // Prevent keyboard from showing up if cal input is clicked\r\n                    $([$target, $rangeTo]).each(function() {\r\n                        $(this).on('focus', function(e) {\r\n                            e.preventDefault();\r\n                            $(this).blur();\r\n                        });\r\n                    });\r\n                    \r\n                    // Work-around to prevent zoom on cal input fields\r\n                    if (isIOS && parseInt($target.css('font-size')) < 16) {\r\n                        $([$target, $rangeTo]).each(function() {\r\n                            $(this).css('font-size', '16px');\r\n                        });\r\n                    }\r\n\r\n                    // Default values setzen\r\n                    if (options.value) {\r\n                        if (!rangeToMode) {\r\n                            targetInit = parseAsMoment(options.value);\r\n                        } else if (options.value[0] && options.value[1]) {\r\n                            targetInit = parseAsMoment(options.value[0]);\r\n                            rangeToInit = parseAsMoment(options.value[1]);\r\n                        }\r\n                    }\r\n                    \r\n                    // Extern navigation\r\n                    options.navigationPrev.click(function() {\r\n                        self.prevMonth();\r\n                    });\r\n                    options.navigationNext.click(function() {\r\n                        self.nextMonth();\r\n                    });\r\n                    \r\n                    // Date ranges\r\n                    $(options.dateRanges).each(function() {\r\n                        var start = parseAsMoment(this[0]);\r\n                        var end = parseAsMoment(this[1]);\r\n                        if (Math.abs(start.diff(end, 'days')) < options.minRange) {\r\n                            return;\r\n                        }\r\n                        dateRangeMin = dateRangeMin ? moment.min(dateRangeMin, start) : start;\r\n                        dateRangeMax = dateRangeMax ? moment.max(dateRangeMax, end) : end;\r\n                        dateRange.push([start, end]);\r\n                    });\r\n                    if (!isActive(nowLocal)) {\r\n                        nowLocal = dateRangeMin.clone();\r\n                    }\r\n                    \r\n                    // Target input\r\n                    if (typeof options.targetInput === 'object' && options.targetInput.jquery && options.targetInput.get(initIndex)) {\r\n                        $targetInput = $(options.targetInput.get(initIndex));\r\n                        \r\n                    } else if (options.targetInput !== false) {\r\n                        $targetInput = $('<input/>', { type: 'hidden', name: options.targetInput === 'string' ? options.targetInput : ($target.attr('name') ? $target.attr('name') : $target.attr('id')) }); $target.attr(\"onm-cal\",\"2015\");\r\n                        $target.after($targetInput);\r\n                        \r\n                    } else {\r\n                        $targetInput = $([]);\r\n                    }\r\n                    \r\n                    // Target element is input\r\n                    if (targetIsInput) {\r\n                        if ((options.placeholder && !$target.attr('placeholder')) || 'replace' === options.placeholder) {\r\n                            $target.attr('placeholder', localData.longDateFormat(options.dateFormat));\r\n                        }\r\n\r\n                        if (targetInit === false && $target.val()) {\r\n                            targetInit = parseAsMoment($target.val());\r\n                            if (targetInit.isValid() && isActive(targetInit)) {\r\n                                nowLocal = targetInit.clone();\r\n                                \r\n                            } else {\r\n                                targetInit = false;\r\n                                self.selectDate(null);\r\n                            }\r\n                        }\r\n                        \r\n                        $target.change(function() {\r\n                            var momentChange = parseAsMoment($target.val());\r\n                            if (momentChange.isValid() && isActive(momentChange)) {\r\n                                self.selectDate(null, 'rangeTo');\r\n                                self.selectDate(momentChange);\r\n                                \r\n                                if (targetDate) {\r\n                                    self.selectDate(targetDate.clone().add(options.minRange, 'days'), 'rangeTo');\r\n                                \r\n                                    var doUpdateMonth = nowLocal.month() !== targetDate.month();\r\n                                    nowLocal = targetDate.clone();\r\n                                    if (doUpdateMonth) {\r\n                                        updateMonth();\r\n                                    }\r\n                                }\r\n                                \r\n                            } else {\r\n                                self.selectDate(null);\r\n                            }\r\n                        });\r\n                    } else if (targetInit === false && $target.text()) {\r\n                        targetInit = parseAsMoment($target.text());\r\n                        if (targetInit.isValid() && isActive(targetInit)) {\r\n                            nowLocal = targetInit.clone();\r\n\r\n                        } else {\r\n                            targetInit = false;\r\n                            self.selectDate(null);\r\n                        }\r\n                    }\r\n                    \r\n                    // RangeTo\r\n                    if (rangeToMode) {\r\n                        // RangeTo input\r\n                        if (typeof options.rangeToInput === 'object' && options.rangeToInput.jquery && options.rangeToInput.get(initIndex)) {\r\n                            $rangeToInput = $(options.rangeToInput.get(initIndex));\r\n\r\n                        } else if (options.rangeToInput !== false) {\r\n                            $rangeToInput = $('<input/>', { type: 'hidden', name: options.rangeToInput === 'string' ? options.rangeToInput : ($rangeTo.attr('name') ? $rangeTo.attr('name') : $rangeTo.attr('id')) });\r\n                            $rangeTo.after($rangeToInput);\r\n\r\n                        } else {\r\n                            $rangeToInput = $([]);\r\n                        }\r\n                        \r\n                        // RangeTo element is input\r\n                        if (rangeToIsInput) {\r\n                            if ((options.placeholder && !$rangeTo.attr('placeholder')) || 'replace' === options.placeholder) {\r\n                                $rangeTo.attr('placeholder', localData.longDateFormat(options.dateFormat));\r\n                            }\r\n\r\n                            if (rangeToInit === false && $rangeTo.val()) {\r\n                                rangeToInit = parseAsMoment($rangeTo.val());\r\n                                if (rangeToInit.isValid() && isActive(rangeToInit)) {\r\n                                    if (!targetInit) {\r\n                                        nowLocal = rangeToInit.clone();\r\n                                    }\r\n                                } else {\r\n                                    rangeToInit = false;\r\n                                    self.selectDate(null, 'rangeTo');\r\n                                }\r\n                            }\r\n\r\n                            $rangeTo.change(function() {\r\n                                var momentChange = parseAsMoment($rangeTo.val());\r\n                                if (momentChange.isValid() && isActive(momentChange)) {\r\n                                    self.selectDate(momentChange, 'rangeTo');\r\n                                    \r\n                                    if (rangeToDate) {\r\n                                        var doUpdateMonth = nowLocal.month() !== rangeToDate.month();\r\n                                        nowLocal = rangeToDate.clone();\r\n                                        if (doUpdateMonth) {\r\n                                            updateMonth();\r\n                                        }\r\n                                    }\r\n\r\n                                } else {\r\n                                    self.selectDate(null, 'rangeTo');\r\n                                }\r\n                            });\r\n                        } else if (rangeToInit === false && $rangeTo.text()) {\r\n                            rangeToInit = parseAsMoment($rangeTo.text());\r\n                            if (rangeToInit.isValid() && isActive(rangeToInit)) {\r\n                                if (!targetInit) {\r\n                                    nowLocal = rangeToInit.clone();\r\n                                }\r\n                            } else {\r\n                                rangeToInit = false;\r\n                                self.selectDate(null, 'rangeTo');\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    if (popupMode) {\r\n                        $target.add($rangeTo).on(targetIsInput ? 'focus' : 'click', function() {\r\n                            self.popupShow(this);\r\n                        });\r\n                        self.resetValue(true);\r\n                        return;\r\n                    }\r\n                    \r\n                    $container = $(options.position.get(initIndex));\r\n                    create();\r\n                    self.resetValue(true);\r\n                };\r\n                \r\n                var popupHideLeave = function(evt) {\r\n                    if ($(evt.target).closest('.onm-cal').length || $target.get(0) === evt.target || $rangeTo.get(0) === evt.target || ($popupPositionTo && $popupPositionTo.get(0) === evt.target)\r\n                      || $(evt.relatedTarget).closest('.onm-cal').length || $target.get(0) === evt.relatedTarget || $rangeTo.get(0) === evt.relatedTarget || ($popupPositionTo && $popupPositionTo.get(0) === evt.relatedTarget)) {\r\n                        return;\r\n                    }\r\n                    self.popupHide();\r\n                };\r\n                \r\n                var resize = function() {\r\n                    if (!$container) {\r\n                        return;\r\n                    }\r\n                    var $inner = $container.find('.onm-cal');\r\n                    if ($inner.width() > 300) {\r\n                        $inner.removeClass('onm-cal-small');\r\n                    } else {\r\n                        $inner.addClass('onm-cal-small');\r\n                    }\r\n                    if (typeof options.position !== 'object') {\r\n                        var docOffsets = $popupPositionTo.offset();\r\n                        var offsets = $popupPositionTo.position();\r\n                        var top;\r\n                        var left;\r\n                        if (options.position.indexOf('top') > -1) {\r\n                            top = offsets.top - $container.outerHeight();\r\n                            \r\n                        } else {\r\n                            top = offsets.top + $popupPositionTo.outerHeight();\r\n                        }\r\n                        if (options.position.indexOf('right') > -1) {\r\n                            left = offsets.left + $popupPositionTo.outerWidth() - $container.outerWidth();\r\n                            \r\n                        } else if (options.position.indexOf('center') > -1) {\r\n                            left = offsets.left + ($popupPositionTo.outerWidth() - $container.outerWidth()) / 2;\r\n                            \r\n                        } else {\r\n                            left = offsets.left;\r\n                        }\r\n                        $container.css({\r\n                            top: Math.max(offsets.top - docOffsets.top, top) + 'px',\r\n                            left: Math.max(offsets.left - docOffsets.left, left) + 'px'\r\n                        });\r\n                    }\r\n                };\r\n                \r\n                var create = function() {\r\n                    var month = nowLocal.clone();\r\n                    for (var i = 0; i < displayMonths; i++) {\r\n                        var $dom = $('<div/>', { class: 'onm-cal' });\r\n                        $dom.on('click', function(evt) {\r\n                            if (!evt.target || evt.target.hasAttribute(\"disabled\")) {\r\n                                return;\r\n                            }\r\n                            if (popupMode) {\r\n                                evt.preventDefault();\r\n                            }\r\n                            clickAction(evt);\r\n                        });\r\n                        if (options.hideNavigation) {\r\n                            $dom.addClass('onm-cal-no-nav');\r\n                        }\r\n                        // Nav\r\n                        var $monthElement = $('<span/>', { class: 'onm-cal-month' });\r\n                        var $yearElement = $('<span/>', { class: 'onm-cal-year' });\r\n                        $dom.append(\r\n                            $('<div/>', { class: 'onm-cal-nav' }).append(\r\n                                i === 0 ? ($prevButton = $('<button/>', { type: 'button', class: 'onm-cal-prev' })) : '',\r\n                                $('<h6/>').append($monthElement, \" \", $yearElement),\r\n                                i === displayMonths - 1 ? ($nextButton = $('<button/>', { type: 'button', class: 'onm-cal-next' })) : ''\r\n                            )\r\n                        );\r\n                        // Headline\r\n                        $dom.append(\r\n                            $('<div/>', { class: 'onm-cal-headline' }).append(\r\n                                $('<div/>', { class: 'onm-cal-line-start onm-cal-day' + month.weekday(0).day() }).text(month.weekday(0).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(1).day() }).text(month.weekday(1).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(2).day() }).text(month.weekday(2).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(3).day() }).text(month.weekday(3).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(4).day() }).text(month.weekday(4).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(5).day() }).text(month.weekday(5).format('dd')),\r\n                                $('<div/>', { class: 'onm-cal-day' + month.weekday(6).day() }).text(month.weekday(6).format('dd'))\r\n                            )\r\n                        );\r\n                        // Content\r\n                        var $contentElement = $('<div/>', { class: 'onm-cal-content' });\r\n                        $dom.append($contentElement);\r\n                        \r\n                        $container.append($dom);\r\n                        monthSpan.push($monthElement.get(0));\r\n                        yearSpan.push($yearElement.get(0));\r\n                        monthContainer.push($contentElement.get(0));\r\n                    }\r\n                    updateMonth();\r\n                    $(window).on('onm.cal.resize', resize);\r\n                    resize();\r\n                    $target.trigger('onm.cal.created', $container);\r\n                };\r\n                \r\n                var clickAction = function(evt) {\r\n                    var $cElement = $(evt.target ? evt.target : evt);\r\n                    if ($cElement.hasClass('onm-cal-prev')) {\r\n                        self.prevMonth();\r\n                        \r\n                    } else if ($cElement.hasClass('onm-cal-next')) {\r\n                        self.nextMonth();\r\n                        \r\n                    } else if ($cElement.closest('.onm-cal-day-active').length) {\r\n                        var mode = 'target';\r\n                        if (rangeToMode) {\r\n                            if (!popupMode || options.popupRangeSelect) {\r\n                                mode = 'auto';\r\n                                \r\n                            } else if ($rangeTo.get(0) === $popupOpener.get(0)) {\r\n                                mode = 'rangeTo';\r\n                            }\r\n                        }\r\n                        self.selectDate(moment($cElement.closest('.onm-cal-day-active').data('date'), ['YYYYMMDD']).locale(options.lang), mode);\r\n                        if (!options.keepPopupOpen && (!options.popupRangeSelect || (options.popupRangeSelect && rangeToMode && targetDate && rangeToDate))) {\r\n                            self.popupHide();\r\n                        }\r\n                    }\r\n                };\r\n                \r\n                var isActive = function(date, range) {\r\n                    range = range || 'day';\r\n                    if (dateRangeMin && date.isBefore(dateRangeMin, range)) {\r\n                        return false;\r\n                    }\r\n                    if (dateRangeMax && date.isAfter(dateRangeMax, range)) {\r\n                        return false;\r\n                    }\r\n                    if ('month' === range && dateRangeMin && dateRangeMax) {\r\n                        return true;\r\n                    }\r\n                    if (!dateRange.length) {\r\n                        return true;\r\n                    }\r\n                    var result = false;\r\n                    $(dateRange).each(function() {\r\n                        if (date.isBetween(this[0], this[1], range) || date.isSame(this[0], range) || date.isSame(this[1], range)) {\r\n                            result = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    return result;\r\n                };\r\n                \r\n                var inDateRange = function(date1, date2) {\r\n                    if (!dateRange.length) {\r\n                        return true;\r\n                    }\r\n                    var result = false;\r\n                    $(dateRange).each(function() {\r\n                        if ((date1.isBetween(this[0], this[1], 'day') || date1.isSame(this[0], 'day') || date1.isSame(this[1], 'day'))\r\n                          && (date2.isBetween(this[0], this[1], 'day') || date2.isSame(this[0], 'day') || date2.isSame(this[1], 'day'))) {\r\n                            result = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    return result;\r\n                };\r\n                \r\n                var getDateRange = function(date) {\r\n                    if (!dateRange.length && !dateRangeMin) {\r\n                        return false;\r\n                    }\r\n                    var result = false;\r\n                    $(dateRange.length ? dateRange : [[dateRangeMin, dateRangeMax]]).each(function() {\r\n                        if (date.isBetween(this[0], this[1], 'day') || date.isSame(this[0], 'day') || date.isSame(this[1], 'day')) {\r\n                            result = this;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    return result;\r\n                };\r\n                \r\n                var createDates = function(month) {\r\n                    var date = month.clone().date(1).weekday(0);\r\n                    var $date;\r\n                    var dates = [];\r\n                    for (var i = 0; i < 42; i++) {\r\n                        $date = $('<div/>', { class: (i % 7 === 0 ? 'onm-cal-line-start' : '') });\r\n                        if (month.month() === date.month()) {\r\n                            $date.append($('<div/>').text(date.format('D')));\r\n                            if (isActive(date)) {\r\n                                var index = date.format('YYYYMMDD');\r\n                                $date.addClass('onm-cal-day-active');\r\n                                $date.data('date', index);\r\n                                self.dateIndex[index] = $date;\r\n                            }\r\n                        }\r\n                        dates.push($date);\r\n                        \r\n                        date.add(1, 'days');\r\n                    }\r\n                    return dates;\r\n                };\r\n                \r\n                var updateMonth = function() {\r\n                    var month;\r\n                    self.dateIndex = {};\r\n                    for (var i = 0; i < displayMonths; i++) {\r\n                        month = nowLocal.clone().add(i, 'months');\r\n                        $(monthSpan[i]).text(month.format('MMMM'));\r\n                        $(yearSpan[i]).text(month.format('YYYY'));\r\n                        $(monthContainer[i]).html(createDates(month));\r\n                        if (i === 0) {\r\n                            $prevButton.add(options.navigationPrev).prop('disabled', !isActive(month.clone().subtract(1, 'months'), 'month'));\r\n                        }\r\n                        if (i === displayMonths - 1) {\r\n                            $nextButton.add(options.navigationNext).prop('disabled', !isActive(month.clone().add(1, 'months'), 'month'));\r\n                        }\r\n                    }\r\n                    highlightDate();\r\n                    $target.trigger('onm.cal.monthChange', [nowLocal.clone().date(1), displayMonths]);\r\n                };\r\n                \r\n                var parseAsMoment = function(date) {\r\n                    var momentDate;\r\n                    if (typeof date === 'string') {\r\n                        var formatL = localData.longDateFormat('L');\r\n                        var formatLL = localData.longDateFormat('LL');\r\n                        momentDate = moment(date, [\r\n                            'YYYY-MM-DD',\r\n                            formatL,\r\n                            formatL.replace('MM', 'M').replace('DD', 'D'),\r\n                            formatL.replace('YYYY', 'YY'),\r\n                            formatL.replace('MM', 'M').replace('DD', 'D').replace('YYYY', 'YY'),\r\n                            formatLL,\r\n                            formatLL.replace('MMMM', 'MMM')\r\n                        ]);\r\n                        \r\n                    } else if (typeof date === 'number') {\r\n                        momentDate = now.clone().add(date, 'days');\r\n                        \r\n                    } else {\r\n                        momentDate = moment(date).hours(0).minutes(0).seconds(0).milliseconds(0);\r\n                    }\r\n                    return momentDate.locale(options.lang);\r\n                };\r\n                \r\n                var parseAsDateIndex = function(date) {\r\n                    if (typeof date === 'string') {\r\n                        return date.replace(/[^0-9]+/g, '');\r\n                        \r\n                    } else if (typeof date === 'number') {\r\n                        return now.clone().add(date, 'days').format('YYYYMMDD');\r\n                        \r\n                    } else if (typeof date === 'object') {\r\n                        if (moment.isDate(date)) {\r\n                            date = moment(date);\r\n                        }\r\n                        if (moment.isMoment(date)) {\r\n                            return date.format('YYYYMMDD');\r\n                        }\r\n                    }\r\n                    return \"\";\r\n                };\r\n                \r\n                var highlightDate = function() {\r\n                    if (!$container) {\r\n                        return;\r\n                    }\r\n                    $container.find('.onm-cal-day-selected').removeClass('onm-cal-day-selected onm-cal-day-selected-line onm-cal-day-selected-start onm-cal-day-selected-end');\r\n                    if (targetDate) {\r\n                        self.getDateElement(targetDate).addClass('onm-cal-day-selected' + (rangeToMode ? ' onm-cal-day-selected-start' : ''));\r\n                    }\r\n                    if (rangeToDate) {\r\n                        self.getDateElement(rangeToDate).addClass('onm-cal-day-selected' + (targetDate ? ' onm-cal-day-selected-end' : ''));\r\n                    }\r\n                    if (targetDate && rangeToDate) {\r\n                        var startDate = targetDate.clone().add(1, 'days');\r\n                        while (startDate.year() * 1000 + startDate.dayOfYear() < rangeToDate.year() * 1000 + rangeToDate.dayOfYear()) {\r\n                            self.getDateElement(startDate).addClass('onm-cal-day-selected onm-cal-day-selected-line');\r\n                            startDate.add(1, 'days');\r\n                        }\r\n                    }\r\n                };\r\n                \r\n                self.resetValue = function(init) {\r\n                    if (init) {\r\n                        if (rangeToMode) {\r\n                            self.selectDate(null, 'rangeTo');\r\n                        }\r\n                        self.selectDate(targetInit !== false ? targetInit.clone() : null);\r\n                        if (rangeToMode && rangeToInit !== false) {\r\n                            self.selectDate(rangeToInit.clone(), 'rangeTo');\r\n                        }\r\n                    } else {\r\n                        self.selectDate(null);\r\n                        if (rangeToMode) {\r\n                            self.selectDate(null, 'rangeTo');\r\n                        }\r\n                    }\r\n                };\r\n                \r\n                self.update = function(updateOptions) {\r\n                    options = $.extend(options, updateOptions);\r\n                    \r\n                    if (!popupMode) {\r\n                        $container.html('');\r\n                        \r\n                    } else if ($container) {\r\n                        $container.remove();\r\n                    }\r\n                    $container = null;\r\n                    \r\n                    init();\r\n                };\r\n                \r\n                self.popupHide = function() {\r\n                    if (!popupMode) {\r\n                        return;\r\n                    }\r\n                    if (!$container || $container.is(':hidden')) {\r\n                        return;\r\n                    }\r\n                    if (hasTouch) {\r\n                        $popupOpener.prop('readonly', false); // No virtual keyboard\r\n                    }\r\n                    $container.hide();\r\n                    $(window).off('click focusin', popupHideLeave);\r\n                    $target.trigger('onm.cal.popupHidden');\r\n                    $target.blur();\r\n                };\r\n                \r\n                self.popupShow = function(opener, rangeTo, positionTo) {\r\n                    $popupOpener = $popupPositionTo = rangeTo && rangeToMode ? $rangeTo : $(opener);\r\n                    if (positionTo) {\r\n                        $popupPositionTo = $(positionTo);\r\n                    }\r\n                    if (hasTouch) {\r\n                        var isReadonly = $popupOpener.prop('readonly');\r\n                        $popupOpener.prop('readonly', true); // No virtual keyboard\r\n                        if (isIOS && !isReadonly) { // iOS readonly must be there before open\r\n                            $popupOpener.blur();\r\n                            $popupOpener.focus();\r\n                        }\r\n                    }\r\n                    if ($container) {\r\n                        $container.show();\r\n                        resize();\r\n\r\n                    } else {\r\n                        $container = $('<div/>', { class: 'onm-cal-popup' }).css({\r\n                            width: options.width\r\n                        });\r\n                        $target.after($container);\r\n                        create();\r\n                        self.resetValue(true);\r\n                    }\r\n                    $target.trigger('onm.cal.popupShown');\r\n                    $(window).on('click focusin', popupHideLeave);\r\n                };\r\n                \r\n                self.prevMonth = function() {\r\n                    nowLocal.subtract(1, 'months');\r\n                    updateMonth();\r\n                };\r\n                self.nextMonth = function() {\r\n                    nowLocal.add(1, 'months');\r\n                    updateMonth();\r\n                };\r\n                \r\n                self.selectDate = function(date, mode) {\r\n                    if (date === false) {\r\n                        return;\r\n                    }\r\n                    if (date !== null && !isActive(date)) {\r\n                        date = null;\r\n                    }\r\n                    mode = mode || 'target';\r\n\r\n                    if (rangeToMode) {\r\n                        if (popupMode && !options.popupRangeSelect) {\r\n                            // Check in dateRange (Before switch!)\r\n                            if ('rangeTo' === mode && targetDate && !rangeToDate && date !== null && !inDateRange(targetDate, date)) {\r\n                                self.selectDate(null, 'target');\r\n                                $target.trigger('onm.cal.message', ['clear', 'dateRange', 'target']);\r\n\r\n                            } else if ('target' === mode && !targetDate && rangeToDate && date !== null && !inDateRange(date, rangeToDate)) {\r\n                                self.selectDate(null, 'rangeTo');\r\n                                $target.trigger('onm.cal.message', ['clear', 'dateRange', 'rangeTo']);\r\n                            }\r\n\r\n                            // Switch\r\n                            if ('rangeTo' === mode && targetDate && targetDate.isAfter(date)) {\r\n                                self.selectDate(null, 'target');\r\n                                $target.trigger('onm.cal.message', ['clear', 'direction', 'target']);\r\n\r\n                            } else if ('target' === mode && rangeToDate && rangeToDate.isBefore(date)) {\r\n                                self.selectDate(null, 'rangeTo');\r\n                                $target.trigger('onm.cal.message', ['clear', 'direction', 'rangeTo']);\r\n                            }\r\n\r\n                            // Check minRange\r\n                            if (options.minRange > 0) {\r\n                                if ('rangeTo' === mode && targetDate && date !== null && Math.abs(targetDate.diff(date, 'days')) < options.minRange) {\r\n                                    self.selectDate(null, 'target');\r\n                                    $target.trigger('onm.cal.message', ['clear', 'minRange', 'target']);\r\n\r\n                                } else if ('target' === mode && rangeToDate && date !== null && Math.abs(date.diff(rangeToDate, 'days')) < options.minRange) {\r\n                                    self.selectDate(null, 'rangeTo');\r\n                                    $target.trigger('onm.cal.message', ['clear', 'minRange', 'rangeTo']);\r\n                                }\r\n                            }\r\n\r\n                            // Check maxRange\r\n                            if (options.maxRange > 0) {\r\n                                if ('rangeTo' === mode && targetDate && date !== null && Math.abs(targetDate.diff(date, 'days')) > options.maxRange) {\r\n                                    self.selectDate(null, 'target');\r\n                                    $target.trigger('onm.cal.message', ['clear', 'maxRange', 'target']);\r\n\r\n                                } else if ('target' === mode && rangeToDate && date !== null && Math.abs(date.diff(rangeToDate, 'days')) > options.maxRange) {\r\n                                    self.selectDate(null, 'rangeTo');\r\n                                    $target.trigger('onm.cal.message', ['clear', 'maxRange', 'rangeTo']);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if ('auto' === mode) {\r\n                                if (targetDate && !rangeToDate) {\r\n                                    mode = 'rangeTo';\r\n                                } else {\r\n                                    mode = 'target';\r\n                                }\r\n                                if (targetDate && rangeToDate) {\r\n                                    self.selectDate(null, 'rangeTo');\r\n                                    self.selectDate(date);\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            // Check in dateRange (Before switch!)\r\n                            if ('rangeTo' === mode && targetDate && !rangeToDate && date !== null && !inDateRange(targetDate, date)) {\r\n                                mode = 'target';\r\n                                $target.trigger('onm.cal.message', ['adaptation', 'dateRange']);\r\n\r\n                            } else if ('target' === mode && !targetDate && rangeToDate && date !== null && !inDateRange(date, rangeToDate)) {\r\n                                mode = 'rangeTo';\r\n                                $target.trigger('onm.cal.message', ['adaptation', 'dateRange']);\r\n                            }\r\n\r\n                            // Switch\r\n                            if ('rangeTo' === mode && targetDate && targetDate.isAfter(date)) {\r\n                                var tempDate = targetDate.clone();\r\n                                self.selectDate(date);\r\n                                self.selectDate(tempDate, 'rangeTo');\r\n                                $target.trigger('onm.cal.message', ['adaptation', 'switch']);\r\n                                return;\r\n\r\n                            } else if ('target' === mode && rangeToDate && rangeToDate.isBefore(date)) {\r\n                                var tempDate = rangeToDate.clone();\r\n                                self.selectDate(tempDate);\r\n                                self.selectDate(date, 'rangeTo');\r\n                                $target.trigger('onm.cal.message', ['adaptation', 'switch']);\r\n                                return;\r\n                            }\r\n\r\n                            // Check minRange\r\n                            if (options.minRange > 0) {\r\n                                if ('rangeTo' === mode && targetDate && date !== null && Math.abs(targetDate.diff(date, 'days')) < options.minRange) {\r\n                                    date = targetDate.clone().add(options.minRange, 'days');\r\n                                    // Check in dateRange (range extended)\r\n                                    if (!inDateRange(targetDate, date)) {\r\n                                        var range = getDateRange(targetDate);\r\n                                        date = range[1].clone();\r\n                                        self.selectDate(date.clone().subtract(options.minRange, 'days'), 'target');\r\n                                    }\r\n                                    $target.trigger('onm.cal.message', ['restriction', 'minRange']);\r\n\r\n                                } else if ('target' === mode && rangeToDate && date !== null && Math.abs(date.diff(rangeToDate, 'days')) < options.minRange) {\r\n                                    date = rangeToDate.clone().subtract(options.minRange, 'days');\r\n                                    // Check in dateRange (range extended)\r\n                                    if (!inDateRange(date, rangeToDate)) {\r\n                                        var range = getDateRange(rangeToDate);\r\n                                        date = range[0].clone();\r\n                                        self.selectDate(date.clone().add(options.minRange, 'days'), 'rangeTo');\r\n                                    }\r\n                                    $target.trigger('onm.cal.message', ['restriction', 'minRange']);\r\n                                }\r\n                            }\r\n\r\n                            // Check maxRange\r\n                            if (options.maxRange > 0) {\r\n                                if ('rangeTo' === mode && targetDate && date !== null && Math.abs(targetDate.diff(date, 'days')) > options.maxRange) {\r\n                                    date = targetDate.clone().add(options.maxRange, 'days');\r\n                                    $target.trigger('onm.cal.message', ['restriction', 'maxRange']);\r\n\r\n                                } else if ('target' === mode && rangeToDate && date !== null && Math.abs(date.diff(rangeToDate, 'days')) > options.maxRange) {\r\n                                    date = rangeToDate.clone().subtract(options.maxRange, 'days');\r\n                                    $target.trigger('onm.cal.message', ['restriction', 'maxRange']);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        mode = 'target';\r\n                    }\r\n\r\n                    var changeTrigger;\r\n                    if ('rangeTo' !== mode) {\r\n                        changeTrigger = !(targetDate === date || targetDate && targetDate.isSame(date));\r\n                        targetDate = date;\r\n                        if (targetIsInput) {\r\n                            $target.val(date ? date.format(localData.longDateFormat(options.dateFormat)) : '');\r\n                        } else {\r\n                            $target.text(date ? date.format(localData.longDateFormat(options.dateFormat)) : '');\r\n                        }\r\n                        $targetInput.val(date ? date.format('YYYY-MM-DD') : '');\r\n                        if (changeTrigger) {\r\n                            $target.trigger('onm.cal.change', [targetDate]);\r\n                        }\r\n                        \r\n                    } else {\r\n                        changeTrigger = !(rangeToDate === date || rangeToDate && rangeToDate.isSame(date));\r\n                        rangeToDate = date;\r\n                        if (rangeToIsInput) {\r\n                            $rangeTo.val(date ? date.format(localData.longDateFormat(options.dateFormat)) : '');\r\n                        } else {\r\n                            $rangeTo.text(date ? date.format(localData.longDateFormat(options.dateFormat)) : '');\r\n                        }\r\n                        $rangeToInput.val(date ? date.format('YYYY-MM-DD') : '');\r\n                        if (changeTrigger) {\r\n                            $rangeTo.trigger('onm.cal.change', [rangeToDate]);\r\n                        }\r\n                    }\r\n                    highlightDate();\r\n                };\r\n                \r\n                self.setDate = function(date, rangeTo) {\r\n                    self.selectDate(parseAsMoment(date), rangeTo === true ? 'rangeTo' : 'target');\r\n                };\r\n                \r\n                self.getDateElement = function(date) {\r\n                    var dateIndex = parseAsDateIndex(date);\r\n                    return self.dateIndex[dateIndex] ? self.dateIndex[dateIndex] : $([]);\r\n                };\r\n                \r\n                self.setDateElementColors = function(date, bgColor, fontColor, nightMode) {\r\n                    var classNames = '';\r\n                    var $dateElement = self.getDateElement(date);\r\n                    \r\n                    $dateElement.removeClass(function(index, css) {\r\n                        return (css.match(/(^|\\s)onm-cal-day-(bg|font)\\S+/g) || []).join(' ');\r\n                    });\r\n                    if (typeof bgColor === 'string' && bgColor.match(/^#[0-9A-Fa-f]{6}$/)) {\r\n                        if (!nightMode) {\r\n                            classNames += setColorCss('bg', bgColor) + ' ';\r\n                            \r\n                        } else {\r\n                            self.getDateElement(parseAsMoment(date).add(1, 'days')).data('split-color', bgColor);\r\n                            if (!$dateElement.data('split-color')) {\r\n                                classNames += setColorCss('bg', bgColor) + ' ';\r\n                                \r\n                            } else {\r\n                                classNames += setColorCss('bg', $dateElement.data('split-color'), bgColor) + ' ';\r\n                            }\r\n                        }\r\n                    }\r\n                    if (typeof fontColor === 'string' && fontColor.match(/^#[0-9A-Fa-f]{6}$/)) {\r\n                        classNames += setColorCss('font', fontColor) + ' ';\r\n                    }\r\n                    if (classNames) {\r\n                        $dateElement.addClass(classNames);\r\n                    }\r\n                };\r\n                self.getDateIndex = function() {\r\n                    return self.dateIndex;\r\n                };\r\n                \r\n                init();\r\n            });\r\n        },\r\n        getDateElement: function(date) {\r\n            var dateElement = [];\r\n            this.each(function() {\r\n                var $element = this.getDateElement(date);\r\n                if (!$element.length) {\r\n                    return;\r\n                }\r\n                dateElement.push($element.get(0));\r\n            });\r\n            return $(dateElement);\r\n        },\r\n        setDate: function(date, rangeTo) {\r\n            return this.each(function() {\r\n                this.setDate(date, rangeTo);\r\n            });\r\n        },\r\n        setDateElementColors: function(date, bgColor, fontColor, nightMode) {\r\n            return this.each(function() {\r\n                this.setDateElementColors(date, bgColor, fontColor, nightMode);\r\n            });\r\n        },\r\n        getDateIndex: function() {\r\n            var result;\r\n            this.each(function() {\r\n                 result = this.getDateIndex();\r\n                 return;\r\n            });\r\n            return result;\r\n        },\r\n        popupShow: function(rangeTo, positionTo) {\r\n            return this.each(function() {\r\n                this.popupShow(this, rangeTo, positionTo);\r\n            });\r\n        },\r\n        popupHide: function() {\r\n            return this.each(function() {\r\n                this.popupHide();\r\n            });\r\n        },\r\n        resetValue: function(init) {\r\n            return this.each(function() {\r\n                this.resetValue(init);\r\n            });\r\n        },\r\n        update: function(options) {\r\n            return this.each(function() {\r\n                this.update(options);\r\n            });\r\n        }\r\n    };\r\n    \r\n    $.fn.onmCal = function(method){\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n        \r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n            \r\n        } else if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n            \r\n        } else {\r\n            throw 'Method \"' + method + '\" not exists in onmCal';\r\n        }\r\n    };\r\n    \r\n    $.fn.onmCal.defaults = {\r\n        lang: $('html').attr('lang') || 'en',\r\n        dateFormat: 'L', // L, l, LL, ll\r\n        targetInput: true, // $(input[type=hidden]), true (or string as input-name), false\r\n        position: '', // $(.holder), top, bottom, left, center, right, and combination\r\n        placeholder: true, // 'replace', true, false\r\n        displayMonths: 1, // Months to display in holder (max: 12)\r\n        rangeToElement: false, // $(.rangeTo)\r\n        rangeToInput: true, // $(input[type=hidden]), true (or string as input-name), false\r\n        hideNavigation: false, // Hide navigation buttons\r\n        value: false, // Default value(s)\r\n        navigationPrev: $([]),\r\n        navigationNext: $([]),\r\n        popupRangeSelect: false, // true: Closes popup after second click, false: Closes after first click\r\n        minRange: 0, // Minimum days to select additional from start date (nights)\r\n        maxRange: 0, // Maximum days to select additional from start date (nights)\r\n        dateRanges: [], // Array of [from, to]-Pairs - Example Pairs: ['2015-02-25', '2015-06-25'], [1, 10]\r\n        width: '', // PopUp width (default 400px)\r\n        keepPopupOpen: false\r\n        // Bind to Events\r\n        // $element.on('onm.cal.created');\r\n        // $element.on('onm.cal.popupShown');\r\n        // $element.on('onm.cal.popupHidden');\r\n        // $element.on('onm.cal.change');  $rangeToElement.on('onm.cal.change');\r\n        // $element.on('onm.cal.monthChange');\r\n        // $element.on('onm.cal.message');\r\n    };\r\n    \r\n}(jQuery));"]}